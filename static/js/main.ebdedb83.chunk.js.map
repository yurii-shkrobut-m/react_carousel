{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","startIndex","setStartIndex","lastFrame","length","styleCarousel","width","itemStyle","transitionDuration","transform","className","style","map","image","src","alt","slice","type","disabled","onClick","stepShift","App","state","onHandleChange","e","setState","prevState","target","name","Number","value","this","action","method","htmlFor","id","min","max","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ebdedb83.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [startIndex, setStartIndex] = useState(0);\n  const lastFrame = images.length - frameSize;\n\n  const moveLeft = (stepShift: number) => {\n    const isEnoughImages = stepShift - startIndex >= 0;\n\n    if (startIndex === 0 && infinite) {\n      setStartIndex(lastFrame);\n    } else if (isEnoughImages) {\n      setStartIndex(0);\n    } else {\n      setStartIndex(startIndex - stepShift);\n    }\n  };\n\n  const moveRight = (stepShift: number) => {\n    const isEnoughImages = startIndex + stepShift >= lastFrame;\n\n    if (startIndex === lastFrame && infinite) {\n      setStartIndex(0);\n    } else if (isEnoughImages) {\n      setStartIndex(lastFrame);\n    } else {\n      setStartIndex(startIndex + stepShift);\n    }\n  };\n\n  const styleCarousel = {\n    width: `${itemWidth * frameSize}px`,\n  };\n\n  const itemStyle = {\n    transitionDuration: `${animationDuration}ms`,\n    transform: `translateX(-${startIndex * itemWidth}px)`,\n  };\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={styleCarousel}\n    >\n      <ul\n        className=\"Carousel__list\"\n      >\n        {images.map(image => (\n          <li\n            key={image}\n            style={itemStyle}\n          >\n            <img\n              className=\"Carousel__image\"\n              width={itemWidth}\n              src={image}\n              alt={image.slice(6, 7)}\n            />\n          </li>\n        ))}\n\n      </ul>\n\n      <div className=\"Carousel_buttons\">\n        <button\n          type=\"button\"\n          disabled={startIndex === 0 && !infinite}\n          onClick={() => moveLeft(step)}\n        >\n          Prev\n        </button>\n\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          disabled={startIndex === lastFrame && !infinite}\n          onClick={() => moveRight(step)}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  onHandleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState(prevState => ({\n      ...prevState,\n      [e.target.name]: Number(e.target.value),\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <form\n          action=\"#\"\n          method=\"post\"\n          className=\"App__form\"\n        >\n          <label htmlFor=\"itemWidth\">\n            Item Width\n            <input\n              className=\"App__input\"\n              id=\"itemWidth\"\n              name=\"itemWidth\"\n              type=\"number\"\n              value={itemWidth}\n              min={130}\n              max={1300}\n              step={10}\n              onChange={this.onHandleChange}\n            />\n          </label>\n\n          <label htmlFor=\"frameSize\">\n            Frame Size\n            <input\n              className=\"App__input\"\n              id=\"frameSize\"\n              name=\"frameSize\"\n              type=\"number\"\n              value={frameSize}\n              min={1}\n              max={10}\n              onChange={this.onHandleChange}\n            />\n          </label>\n\n          <label htmlFor=\"step\">\n            Step\n            <input\n              className=\"App__input\"\n              id=\"step\"\n              name=\"step\"\n              type=\"number\"\n              value={step}\n              min={1}\n              max={7}\n              onChange={this.onHandleChange}\n            />\n          </label>\n\n          <label htmlFor=\"animationDuration\">\n            Animation Duration\n            <input\n              className=\"App__input\"\n              id=\"animationDuration\"\n              name=\"animationDuration\"\n              type=\"number\"\n              value={animationDuration}\n              min={1000}\n              max={10000}\n              step={500}\n              onChange={this.onHandleChange}\n            />\n          </label>\n\n          <label htmlFor=\"infinite\">\n            Infinite\n            <input\n              className=\"App__input\"\n              id=\"infinite\"\n              name=\"infinite\"\n              type=\"checkbox\"\n              onClick={() => this.setState({\n                infinite: !infinite,\n              })}\n            />\n          </label>\n\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}